---
- name: Test custom collection module
  hosts: all
  strategy: free
  vars:
    webapp:
      version: &my_version 1.0
      custom_name:
        - "ToDo_App"
        - *my_version
  tasks:
    - name: Say hello
      moukail.my_collection.hello_module:
        name: "World"

    #- name: Give me permutations of sets of three
    #  ansible.builtin.debug:
    #    msg: "{{ [1,2,3,4,5] | ansible.builtin.permutations(3) | list }}"

    - name: To get the sha1 hash of a string
      ansible.builtin.debug:
        msg: "{{ 'test1' | hash('sha1') }}"

    # pip install passlib
    #- name: To get a sha256 password hash with a specific salt
    #  ansible.builtin.debug:
    #    msg: "{{ 'secretpassword' | password_hash('sha256', 'mysecretsalt') }}"

    - name: To create a namespaced UUIDv5
      ansible.builtin.debug:
        msg: "{{ 'mystring' | to_uuid(namespace='11111111-2222-3333-4444-555555555555') }}"

    - name: Use ansible_date_time.epoch fact
      ansible.builtin.debug:
        msg: "{{ '%Y-%m-%d %H:%M:%S' | strftime(ansible_date_time.epoch) }}"

    - name: Comparing versions
      ansible.builtin.debug:
        msg: "{{ ansible_facts['distribution_version'] }}"

    - name: Comparing versions
      ansible.builtin.debug:
        msg: "Yes"
      when: ansible_facts['distribution_version'] is version('25.04', operator='lt', strict=True)

    - name: "Human Readable"
      assert:
        that:
          - '"1.00 Bytes" == 1|human_readable'
          - '"1.00 bits" == 1|human_readable(isbits=True)'
          - '"10.00 KB" == 10240|human_readable'
          - '"97.66 MB" == 102400000|human_readable'
          - '"0.10 GB" == 102400000|human_readable(unit="G")'
          - '"0.10 Gb" == 102400000|human_readable(isbits=True, unit="G")'

    - name: Using dict2items
      ansible.builtin.debug:
        msg: "{{ item.key }} - {{ item.value }}"
      loop: "{{ tag_data | dict2items }}"
      vars:
        tag_data:
          Environment: dev
          Application: payment

    - name: Count our fruit
      ansible.builtin.debug:
        msg: "{{ item }} with index {{ my_idx }}"
      loop:
        - apple
        - banana
        - pear
      loop_control:
        index_var: my_idx

    - name: with_together -> loop
      ansible.builtin.debug:
        msg: "{{ item.0 }} - {{ item.1 }} - {{ item.2 }}"
      loop: "{{ data[0]|zip(*data[1:])|list }}"
      vars:
        data:
          - [ 'a', 'b', 'c' ]
          - [ 'd', 'e', 'f' ]
          - [ 'g', 'h', 'i' ]

    - name: Run with items greater than 5
      ansible.builtin.command: echo {{ item }}
      loop: [ 0, 2, 4, 6, 8, 10 ]
      when: item > 5

    - name: Simulate long running op (15 sec), wait for up to 45 sec, poll every 5 sec
      ansible.builtin.command: /bin/sleep 15
      async: 45
      poll: 5

    - name: Using Anchor value
      ansible.builtin.debug:
        msg: My app is called "{{ webapp.custom_name | join('-') }}".